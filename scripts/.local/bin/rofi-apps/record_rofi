#!/bin/sh

record_dir="$HOME/Videos/Herbert"

updatestatus() { \
	echo "$1" > /tmp/recordingicon
}

killrecording() {
	recpid="$(cat /tmp/recordingpid)"
	# kill with SIGTERM, allowing finishing touches.
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	updatestatus ""
	# even after SIGTERM, ffmpeg may still run, so SIGKILL it.
    notify-send " Recording" "Screencast stopped."
	sleep 3
	kill -9 "$recpid" &>/dev/null
	exit
}

screencast() { \
    filename="$record_dir/[$(date '+%y%m%d-%H%M-%S')] screencast" 
    ffmpeg -y \
	-f x11grab \
	-framerate 60 \
	-s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
	-i $DISPLAY \
	-f alsa -i default \
	-r 30 \
 	-c:v libx264rgb -crf 0 -preset ultrafast -c:a flac \
	"$filename.mkv" & \
	echo $! > /tmp/recordingpid 
	updatestatus "screencast" 
    notify-send "⏺ Recording" "Screencast started."
}

askrecording() { \
	choice=$(printf "screencast" | rofi -dmenu -i -p "recording:")
	case "$choice" in
		screencast) screencast;;
	esac
}

asktoend() { \
	response=$(printf "No\\nYes" | rofi -dmenu -i -p "recording still active, end recording:") &&
	[ "$response" = "Yes" ] &&  killrecording 
}


case "$1" in
	screencast) screencast;;
	kill) killrecording;;
	*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording;;
esac

