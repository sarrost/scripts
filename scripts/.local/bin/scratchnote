#!/bin/sh

# this lets a new monitor called "scratchnote" appear in from the top into the
# current monitor. There the "scratchnote" will be shown (it will be created if
# it doesn't exist yet). If the monitor already exists it is scrolled out of
# the screen and removed again.
#
# Warning: this uses much resources because herbstclient is forked for each
# animation step.
#
# If a tag name is supplied, this is used instead of the scratchnote

tag="scratchnote"
hc() { "${herbstclient_command[@]:-herbstclient}" "$@" ;}

mrect=( $(hc monitor_rect "laptop" ) )

width=${mrect[2]}
height=${mrect[3]}

rect=(
    $((640))
    $((1000))
    $((${mrect[0]}+(width-640)))
    $((${mrect[1]}+(height-1000)/2))
)

hc add "$tag"

monitor=$tag

exists=false
if ! hc add_monitor $(printf "%dx%d%+d%+d" "${rect[@]}") \
                    "$tag" $monitor 2> /dev/null ; then
    exists=true
else
    # remember which monitor was focused previously
    hc chain \
        , new_attr string monitors.by-name."$monitor".my_prev_focus \
        , substitute M monitors.focus.index \
            set_attr monitors.by-name."$monitor".my_prev_focus M
fi

show() {
    hc lock
    hc raise_monitor "$monitor"
    hc focus_monitor "$monitor"
    hc unlock
    hc lock_tag "$monitor"
}

hide() {
    # if q3terminal still is focused, then focus the previously focused monitor
    # (that mon which was focused when starting q3terminal)
    hc substitute M monitors.by-name."$monitor".my_prev_focus \
        and + compare monitors.focus.name = "$monitor" \
            + focus_monitor M
    hc remove_monitor "$monitor"
}

startup() {
    tmux new -s $tag -d
    hc lock
    hc raise_monitor "$monitor"
    hc focus_monitor "$monitor"
    hc unlock
    hc lock_tag "$monitor"
    $TERMINAL -e sh -c "tmux attach -t $tag" & disown

    sleep 0.2
    hc substitute M monitors.by-name."$monitor".my_prev_focus \
        and + compare monitors.focus.name = "$monitor" \
            + focus_monitor M
    hc remove_monitor "$monitor"

    tmux send-keys -l -t scratchnote "nvim"
    tmux send-keys -t scratchnote 'Enter'
    tmux send-keys -l -t scratchnote ";SimplenoteList"
    tmux send-keys -t scratchnote 'Enter'
    sleep 5
    tmux send-keys -l -t scratchnote "/TODO"
    tmux send-keys -t scratchnote 'Enter'
    tmux send-keys -l -t scratchnote ";noh"
    tmux send-keys -t scratchnote 'Enter'
    sleep 5
    tmux send-keys -t scratchnote 'Enter'
    tmux send-keys -l -t scratchnote ";only"
    tmux send-keys -t scratchnote 'Enter'
}


if [[ $1 == "start" ]]; then 
    [ $exists = true ] || startup
elif [[ $1 == "toggle" ]]; then 
    [ $exists = true ] && hide || show
fi
