#!/bin/sh

#〖愛〗dmenu_record - record video/audio

# Usage:
# `$0`: Ask for recording type via dmenu
# `$0 screencast`: Record both audio and screen
# `$0 video`: Record only screen
# `$0 audio`: Record only audio
# `$0 kill`: Kill existing recording

# If there is already a running instance, user will be prompted to end it.

# REQUIRED: ffmpeg

PID_FILE=/tmp/.recording_pid
STATUS_FILE=/tmp/.recording_status

update_icon() { 
	echo "$1" > "$STATUS_FILE"
	pkill -RTMIN+13 "${STATUSBAR:-dwmblocks}"
}

kill_recording() {
	recpid="$(cat "$PID_FILE")"
	# kill with SIGTERM, allowing finishing touches.
	kill -15 "$recpid"
	rm -f "$PID_FILE"
	update_icon ""
	# even after SIGTERM, ffmpeg may still run, so SIGKILL it.
	sleep 3
	kill -9 "$recpid"
	exit
}

screencast() {
	ffmpeg -y \
	-f x11grab \
	-framerate 60 \
	-s "$(xdpyinfo | grep dimensions | awk '{print $2;}')" \
	-i "$DISPLAY" \
	-f alsa -i default \
	-r 30 \
 	-c:v h264 -crf 0 -preset ultrafast -c:a aac \
	"$XDG_VIDEOS_DIR/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
	echo $! > "$PID_FILE"
	update_icon "screencast"
}

video() { 
	ffmpeg \
	-f x11grab \
	-s "$(xdpyinfo | grep dimensions | awk '{print $2;}')" \
	-i "$DISPLAY" \
 	-c:v libx264 -qp 0 -r 30 \
	"$XDG_VIDEOS_DIR/video-$(date '+%y%m%d-%H%M-%S').mp4" &
	echo $! > "$PID_FILE"
	update_icon "video"
}

audio() { 
	ffmpeg \
	-f alsa -i default \
	-c:a flac \
	"$RICE_AUDIO_DIR/audio-$(date '+%y%m%d-%H%M-%S').flac" &
	echo $! > "$PID_FILE"
	update_icon "audio"
}

ask_to_record() {
	choice=$(
		printf "screencast\\nvideo\\naudio" | 
		dmenu -i -p "Select recording style:"
	)
	case "$choice" in
		screencast) screencast;;
		audio) audio;;
		video) video;;
	esac
}

ask_to_end() { 
	response=$(
		printf "no\\nyes" | 
		dmenu -i -p "Recording still active. End recording?"
	)
	[ "$response" = "yes" ] && kill_recording
}

case "$1" in
	screencast) screencast;;
	audio) audio;;
	video) video;;
	kill) kill_recording;;
	*) ([ -f "$PID_FILE" ] && ask_to_end && exit) || ask_to_record;;
esac
